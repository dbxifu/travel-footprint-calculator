# This YAML file holds some of the content of the website, for convenience.
# Learn YAML, it's worth it: http://sweetohm.net/article/introduction-yaml.html
# /!. IF YOU BREAK THIS FILE YOU BREAK THE WEBSITE.  TREAD CAREFULLY.

# Metadata about this website
meta:
  title: Travel Carbon Footprint Calculator
  description: |
    A travel carbon footprint calculator for researchers and event organizers.
  authors:
    - name:  Didier Barret
      email: dbarret@irap.omp.eu
      role:  Principal Investigator
    - name:  Antoine Goutenoir
      email: antoine@goutenoir.com
      role:  Software Ninja
    - name:  Jean-Michel Glorian
      email: Jean-Michel.Glorian@irap.omp.eu
      role:  Benevolent Wizard
    - name:  Élodie Bourrec
      email: elodie.bourrec@irap.omp.eu
      role:  Administratrice


# Global configuration for all models
shared_config:
  # In kg/km.
  train_emission: 0.023
  # Multiplier to approximate conversion of Great Circle Distances to Road
  gcd_to_road_scale: 1.3


# Aka. Laws
models:
  - name: Atmosfair (mul. factor=3 for altitude > 9 km)
    # Slugged version of the display name above
    # Only lowercase alphanumeric, starting with a letter, using - as liaison
    # In other words, MUST match ^[a-z]([a-z0-9-]*[a-z0-9])?$ eg: icao-with-rfi
    # MUST be unique, two models MUST NOT have the same slug.
    slug: atmosfair-rfi
    # There MUST exist a python file named like this in `flaskr/laws`
    # And it MUST contain a class named EmissionModel
    # Please keep this lowercased, letters-only (or I will breathe fire)
    file: travel_emission_lerp_fit
    # Color MUST be in the hex form, without alpha
    color: "#9933ff"
    # Whether this model is selected by default in the list.
    selected: false
    # The configuration that will be fed to the model.
    # May be anything, really.  Go bonkers!
    config:
      plane_emission_linear_fit:
        # A coefficient applied to the distance
        connecting_flights_scale: 1.05
        # Radiative Forcing Index
        # Multiplier after scaling
        rfi: 1.0
        # Flat scalar to add before scaling with laws
        offset_before: 0
        # Scalar to multiply before scaling with laws
        scale_before: 1
        # The travel_emission_lerp_fit uses points instead of intervals
        # List of (distance in km, footprint in kg)
        points:
          - [     0.0,    0.0            ]
          - [   299.9,    0.0            ]
          - [   300.0,  100.771075677223 ]
          - [  3999.9,  866.237395584634 ]
          - [  4000.0,  844.203401814933 ]
          - [ 19999.9, 5606.129335551792 ]
          - [ 25000.0, 7094.270252762378 ]

  - name: ADEME (2023, with contrail impacts)
    # Slugged version of the display name above
    # Only lowercase alphanumeric, starting with a letter, using - as liaison
    # In other words, MUST match ^[a-z]([a-z0-9-]*[a-z0-9])?$ eg: icao-with-rfi
    # MUST be unique, two models MUST NOT have the same slug.
    slug: ademe-rfi
    # There MUST exist a python file named like this in `flaskr/laws`
    # And it MUST contain a class named EmissionModel
    # Please keep this lowercased, letters-only (or I will breathe fire)
    file: travel_emission_lerp_fit
    # Color MUST be in the hex form, without alpha
    color: "#33ff99"
    # Whether this model is selected by default in the list.
    selected: true
    # The configuration that will be fed to the model.
    # May be anything, really.  Go bonkers!
    config:
      plane_emission_linear_fit:
        # A coefficient applied to the distance
        connecting_flights_scale: 1.05
        # Radiative Forcing Index
        # Multiplier after scaling
        # DEPRECATED
        rfi: 1.0
        # Flat scalar to add before scaling with laws
        offset_before: 0
        # Flat scalar to multiply before scaling with laws
        scale_before: 1
        # The travel_emission_lerp_fit uses points instead of intervals
        # List of (distance in km, footprint in kg)
        points:
          - [0.0, 0.0]
          - [500.0, 115.0]
          - [1000.0, 230.0]
          - [1500.0, 267.6]
          - [2000.0, 356.8]
          - [2500.0, 446.0]
          - [3000.0, 535.2]
          - [3500.0, 624.4]
          - [4000.0, 606.6]
          - [5000.0, 758.3]
          - [6000.0, 910.0]
          - [7000.0, 1061.6]
          - [8000.0, 1213.3]
          - [9000.0, 1364.9]
          - [10000.0, 1516.6]
          - [11000.0, 1668.3]
          - [12000.0, 1819.9]
          - [13000.0, 1971.6]
          - [14000.0, 2123.2]
          - [15000.0, 2274.9]
          - [16000.0, 2426.6]
          - [17000.0, 2578.2]
          - [18000.0, 2729.9]
          - [19000.0, 2881.5]
          - [20000.0, 3033.2]
          - [21000.0, 3184.9]
          - [22000.0, 3336.5]
          - [23000.0, 3488.2]
          - [24000.0, 3639.8]
          - [25000.0, 3791.5]

 
  - name: MYCLIMATE (mul. factor=2)
    # Slugged version of the display name above
    # Only lowercase alphanumeric, starting with a letter, using - as liaison
    # In other words, MUST match ^[a-z]([a-z0-9-]*[a-z0-9])?$ eg: icao-with-rfi
    # MUST be unique, two models MUST NOT have the same slug.
    slug: my-climate-rfi
    # There MUST exist a python file named like this in `flaskr/laws`
    # And it MUST contain a class named EmissionModel
    # Please keep this lowercased, letters-only (or I will breathe fire)
    file: travel_emission_lerp_fit
    # Color MUST be in the hex form, without alpha
    color: "#99ff33"
    # Whether this model is selected by default in the list.
    selected: true
    # The configuration that will be fed to the model.
    # May be anything, really.  Go bonkers!
    config:
      plane_emission_linear_fit:
        # A coefficient applied to the distance
        connecting_flights_scale: 1.05
        # Radiative Forcing Index
        # Multiplier after scaling
        # DEPRECATED
        rfi: 1.0
        # Flat scalar to add before scaling with laws
        offset_before: 95
        # Flat scalar to multiply before scaling with laws
        scale_before: 1
        # The travel_emission_lerp_fit uses points instead of intervals
        # List of (distance in km, footprint in kg)
        points:
          - [0.0, 0.0 ]
          - [299.9, 0.0 ]
          - [300.0, 120.42928309599999 ]
          - [1499.9, 278.86980907246215 ]
          - [1500.0, 278.8830135500002 ]
          - [2499.9, 438.3026953954595 ]
          - [2500, 438.3186389580005 ]
          - [19999.9, 3335.611941663665 ]
          - [25000.0, 4163.431314509144 ]


  - name: DEFRA (2023, with radiative forcing)
    # Slugged version of the display name above
    # Only lowercase alphanumeric, starting with a letter, using - as liaison
    # In other words, MUST match ^[a-z]([a-z0-9-]*[a-z0-9])?$ eg: icao-with-rfi
    # MUST be unique, two models MUST NOT have the same slug.
    slug: defra-rfi
    # There MUST exist a python file named like this in `flaskr/laws`
    # And it MUST contain a class named EmissionModel
    # Please keep this lowercased, letters-only (or I will breathe fire)
    file: travel_emission_lerp_fit
    # Color MUST be in the hex form, without alpha
    color: "#3399ff"
    # Whether this model is selected by default in the list.
    selected: true
    # The configuration that will be fed to the model.
    # May be anything, really.  Go bonkers!
    config:
      plane_emission_linear_fit:
        # A coefficient applied to the distance
        connecting_flights_scale: 1.05
        # Radiative Forcing Index
        # Multiplier after scaling
        # DEPRECATED
        rfi: 1.0
        # Flat scalar to add before scaling with laws
        offset_before: 0
        # Flat scalar to multiply before scaling with laws
        scale_before: 1
        # The travel_emission_lerp_fit uses points instead of intervals
        # List of (distance in km, footprint in kg)
        points:
          - [0.0, 0.0]
          - [500.0, 136.3]
          - [1000.0, 272.6]
          - [1500.0, 287.2]
          - [2000.0, 383.0]
          - [2500.0, 478.7]
          - [3000.0, 574.5]
          - [3500.0, 670.2]
          - [4000.0, 669.5]
          - [5000.0, 836.9]
          - [6000.0, 1004.2]
          - [7000.0, 1171.6]
          - [8000.0, 1339.0]
          - [9000.0, 1506.4]
          - [10000.0, 1673.8]
          - [11000.0, 1841.1]
          - [12000.0, 2008.5]
          - [13000.0, 2175.9]
          - [14000.0, 2343.2]
          - [15000.0, 2510.6]
          - [16000.0, 2678.0]
          - [17000.0, 2845.4]
          - [18000.0, 3012.8]
          - [19000.0, 3180.1]
          - [20000.0, 3347.5]
          - [21000.0, 3514.9]
          - [22000.0, 3682.2]
          - [23000.0, 3849.6]
          - [24000.0, 4017.0]
          - [25000.0, 4184.4]

  - name: French Ministry of Ecology (no mul. factor, not recommended)
    # Slugged version of the display name above
    # Only lowercase alphanumeric, starting with a letter, using - as liaison
    # In other words, MUST match ^[a-z]([a-z0-9-]*[a-z0-9])?$ eg: icao-with-rfi
    # MUST be unique, two models MUST NOT have the same slug.
    slug: fr-ministry-ecology-no-rfi
    # There MUST exist a python file named like this in `flaskr/laws`
    # And it MUST contain a class named EmissionModel
    # Please keep this lowercased, letters-only (or I will breathe fire)
    file: travel_emission_lerp_fit
    # Color MUST be in the hex form, without alpha
    color: "#333333"
    # Whether this model is selected by default in the list.
    selected: false
    # The configuration that will be fed to the model.
    # May be anything, really.  Go bonkers!
    config:
      plane_emission_linear_fit:
        # A coefficient applied to the distance
        connecting_flights_scale: 1.05
        # Radiative Forcing Index
        # Multiplier after scaling
        # DEPRECATED
        rfi: 1.0
        # Flat scalar to add before scaling with laws
        offset_before: 0
        # Flat scalar to multiply before scaling with laws
        scale_before: 1
        # The travel_emission_lerp_fit uses points instead of intervals
        # List of (distance in km, footprint in kg)
        points:
          - [0.0, 0.0 ]
          - [299.9, 0.0 ]
          - [300.0, 103.02499999999998 ]
          - [999.9, 158.492075 ]
          - [1000.0, 158.50000000000003 ]
          - [1999.9, 250.32414999999997 ]
          - [2000, 250.33333333333326 ]
          - [2999.9, 301.9948333333333 ]
          - [3000, 302.0000000000004 ]
          - [3999.9, 447.9854000000004 ]
          - [4000, 448.0000000000002 ]
          - [4999.9, 587.48605 ]
          - [5000, 587.4999999999999 ]
          - [5999.9, 608.9978499999997 ]
          - [6000, 609.0000000000002 ]
          - [6999.9, 629.9979000000001 ]
          - [7000, 629.9999999999999 ]
          - [7999.9, 719.9909999999996 ]
          - [8000, 720.0000000000002 ]
          - [8999.9, 760.4959500000004 ]
          - [9000, 760.4999999999997 ]
          - [9999.9, 864.9895499999997 ]
          - [10000, 865.0000000000005 ]
          - [10999.9, 1039.482549999999 ]
          - [11000, 1035.9000000000015 ]
          - [19999.9, 1879.1906300000016 ]
          - [25000.0, 2347.7000000000016 ]

  - name: KLM data best fit (no mul. factor, not recommended)
    # Slugged version of the display name above
    # Only lowercase alphanumeric, starting with a letter, using - as liaison
    # In other words, MUST match ^[a-z]([a-z0-9-]*[a-z0-9])?$ eg: icao-with-rfi
    # MUST be unique, two models MUST NOT have the same slug.
    slug: klm-data-no-rfi
    # There MUST exist a python file named like this in `flaskr/laws`
    # And it MUST contain a class named EmissionModel
    # Please keep this lowercased, letters-only (or I will breathe fire)
    file: travel_emission_lerp_fit
    # Color MUST be in the hex form, without alpha
    color: "#ff3399"
    # Whether this model is selected by default in the list.
    selected: false
    # The configuration that will be fed to the model.
    # May be anything, really.  Go bonkers!
    config:
      plane_emission_linear_fit:
        # A coefficient applied to the distance
        connecting_flights_scale: 1.05
        # Radiative Forcing Index
        # Multiplier after scaling
        # DEPRECATED
        rfi: 1.0
        # Flat scalar to add before scaling with laws
        offset_before: 0
        # Flat scalar to multiply before scaling with laws
        scale_before: 1
        # The travel_emission_lerp_fit uses points instead of intervals
        # List of (distance in km, footprint in kg)
        points:
          - [0.0, 0.0 ]
          - [299.9, 0.0 ]
          - [300.0, 41.883578628476144 ]
          - [2499.9, 214.70184186944394 ]
          - [2500.0, 261.6807087092951 ]
          - [14999.9, 962.2587735768744 ]
          - [25000.0, 1522.7313138757793 ]

  - name: ICAO data best fit (no mul. factor, not recommended)
    # Slugged version of the display name above
    # Only lowercase alphanumeric, starting with a letter, using - as liaison
    # In other words, MUST match ^[a-z]([a-z0-9-]*[a-z0-9])?$ eg: icao-with-rfi
    # MUST be unique, two models MUST NOT have the same slug.
    slug: icao-no-rfi
    # There MUST exist a python file named like this in `flaskr/laws`
    # And it MUST contain a class named EmissionModel
    # Please keep this lowercased, letters-only (or I will breathe fire)
    file: travel_emission_lerp_fit
    # Color MUST be in the hex form, without alpha
    color: "#ff9933"
    # Whether this model is selected by default in the list.
    selected: false
    # The configuration that will be fed to the model.
    # May be anything, really.  Go bonkers!
    config:
      plane_emission_linear_fit:
        # A coefficient applied to the distance
        connecting_flights_scale: 1.05
        # Radiative Forcing Index
        # Multiplier after scaling
        # DEPRECATED
        rfi: 1.0
        # Flat scalar to add before scaling with laws
        offset_before: 0
        # Flat scalar to multiply before scaling with laws
        scale_before: 1
        # The travel_emission_lerp_fit uses points instead of intervals
        # List of (distance in km, footprint in kg)
        points:
          - [0.0, 0.0 ]
          - [299.9, 0.0 ]
          - [300.0, 67.00585705041823 ]
          - [2499.9, 211.09825928042045 ]
          - [2500.0, 206.528816915788 ]
          - [14999.9, 663.8204584246745 ]
          - [25000.0, 1029.6603566841018 ]


# The grouped barchart displayed on the home page.
laws_plot:
  distances:
    - 350.0
    - 500.0
    - 1000.0
    - 1500.0
    - 2500.0
    - 3000.0
    - 4500.0
    - 5000.0
    - 8000.0
    - 10000.0
    - 12000.0
    - 15000.0
    - 20000.0
    - 25000.0


# The content is Markdown.  HTML is also allowed.
# If you also want Markdown in the titles, just ask.
home:
  # The hero block (aka. jumbotron) is the top-level, salient block.
  # It's like a welcoming mat :)
  hero:
    title: Estimate your travel carbon footprint
    # Using a pipe (|) allows you to set multiline content
    # Careful, indentation matters.
    description: |
      Travel footpint calculator provided by Didier Barret
      <br>
      <icon globe>
      CNRS,
      <icon house>
      [IRAP](http://www.irap.omp.eu),
      <icon bell>
      [@DidierBarret](https://twitter.com/DidierBarret),
      <icon envelope>
      [didier.barret@gmail.com](mailto:didier.barret@gmail.com)

  # Three blocks per section.
#  sections:

  # You can also use columns.
  columns:
    - blocks:

      - title: What does the tool do?
        content: |
          The tool computes the carbon footprint associated with round
          trip flights, according to the methodology of several publicly
          available calculators.
          It does so for a set of trips from a given city of origin
          to a set of destinations. Similarly, the tool allows to compute 
          the carbon footprint of a larger set of trips, corresponding to a 
          conference, a meeting and so on. For this, the city of departure 
          for each participant to the event has first to be provided. 
          If multiple destination cities are provided, the tool ranks those 
          cities according to the associated carbon footprint. 

          While online calculators enable to compute the footprint of a 
          limited number of trips, this tool enables to compute the 
          footprint of a larger number of trips in an automated way. 

          Furthermore, it provides an estimate based on data from seven 
          different methods, whose estimates can differ significantly. If 
          more than one method is selected by the user, the tool returns 
          the mean of the estimates of all selected methods.  

      - title: How does the tool work?
        content: |
          A round trip is defined by a city pair. The two cities are 
          geolocated and from their longitude and latitude, the great 
          circle distance is computed. This is the shortest path a plane 
          can follow. Some methods thus consider uplift correction 
          factors to account for deviations from the shortest paths, e.g., 
          when a plane avoids bad weather conditions. In 
          addition, two cities may not be connected by a direct flight. 
          This is accounted for by increasing by 5% the great circle 
          distance. Each method provides the carbon dioxide emission 
          in kg as a function of the flight distance in km. Thus from the 
          increased great circle distance, the carbon dioxide emission of 
          a flight associated with a trip between a city pair is computed 
          and multiplied by two to account for a round trip. 


      - title: Which methods are used? 
        content: |
          The tool incorporates seven different methods, among the most 
          widely used, and for which the methodology used is 
          documented (see additional resources later). This tool is by no means
          a critical review of the different methods. It takes the methods as
          they are described and presented. The methods may differ in their 
          assumptions (e.g. with or without radiative forcing included) 
          or in the perimeter considered (e.g. adding to the flight emissions,
          the one associated with the production phase and transport of the kerosene). 
          The tool attempts to implement 
          each method to the highest possible level of accuracy. 
          Providing more than one method enables to get 
          a mean value, while illustrating the significant differences in 
          their estimates. In alphabetic order, the data considered are 
          from ADEME: the French Environment & Energy Management 
          Agency, atmosfair: a German carbon offsetting company, 
          DEFRA: the UK Department for Environment, Food & Rural 
          Affairs, the French Ministry for the Ecological and Inclusive Transition, 
          ICAO: International Civil Aviation Organization, from the 
          KLM carbon compensation service data and finally from 
          myclimate, a Carbon offseting company, used in particular by Lufthansa. 
          
          _This list is obviously not exhaustive but represents
          a variety of estimates from lower to higher values._

      - title: Updating the emission factors 
        content: |
          The emission factors will be regularly updated. In April 2021, the emission factors 
          from ADEME were updated (a minor revision took place on september 2023, from (https://impactco2.fr/transport/avion)). 
          The average emission factors for short, medium, long flights 
          are considered for planes of 200 seats or more (for ADEME). Very similar data are considered by the 
          Labos1.5 organisation (https://labos1point5.org/ges-1point5). In September 2023, 
          the emission factors from DEFRA were updated. Similarly to the ADEME factors, 
          short-hauls have a distance less than 1000 km, medium-hauls between 1000 and 3500 km, 
          and long-hauls above 3500 km. The DEFRA emission factor for medius-hauls is the mean
          of the factors for domestic flights and short-haul international flights. 
          The DEFRA emission factor for long-hauls is the mean between long-haul flights (to/from UK) 
          and international flights(to/from non-UK). The DEFRA 2023 data and ADEME 2021 
          data are consistent with one another within uncertainties (from 10% to 70% for 
          short and long flight emissions respectively).


      - title: How are the different methods built? 
        content: |
          What is needed for each method is a function giving the 
          carbon dioxide emission as a function of the flight distance. 
          ADEME and DEFRA provide mean emission factors, as a 
          function of flight distance. Myclimate provides an analytical 
          formula. For ICAO and atmosfair, the on-line calculators have 
          been run for a wide range of flights of varying distances (~100 
          flights spanning from 300 km to 12000 km) and the estimates 
          have been fitted with linear functions, covering adjacent 
          distance intervals. For its carbon compensation service, KLM 
          provides on its web site a table of emissions for a large range 
          of flights. The KLM data have been also been fitted with linear 
          functions. Differences up to a few tens of percent may be found between
          the data and the linearly interpolated values. 

      - title: Accounting for non CO2 effects?
        slug: rfi
        content: |
          Aviation contributes to climate change more than just with the emission 
          of Carbon dioxide from burning fuels, by releasing gases and particles 
          directly into the upper troposphere and lower stratosphere where 
          they have an impact on atmospheric composition.
          To quantify to total climate impact of burning fuels, the direct 
          CO2 emission of aircrafts is then multiplied by a factor, which 
          in the literature refers either to a Radiative Forcing Index (RFI) 
          or a Global Warming Potential (GWP) integrated over some time period 
          (a 100-year time horizon was adopted for the Kyoto Protocol to the 
          United Nations Framework Convention on Climate Change). There is a debate 
          in the science community on how non-CO2 effects should be modelled. 
          For instance, a RFI multiplier of 1.7 (update 2023) is used by DEFRA,
          and a multiplier of 2 is considered by myclimate and ADEME
          (see discussion in [Jungbluth, N. & Meili,
          C. Int J Life Cycle Assess (2019) 24: 404](https://doi.org/10.1007/s11367-018-1556-3).).
          ATMOSFAIR considers a multiplier of 3, for all emissions above 9 km,
          accounting for the profile of the flight.
          ICAO, KLM and the French Ministry for the 
          Ecological and Inclusive Transition do not include a multiplier.
          Therefore, the methods based on ICAO, the French Ministry for the 
          Ecological and Inclusive Transition and KLM data are not recommended,
          as they do not account for non-CO2 effects, but are still 
          given as methods providing the lowest emissions.

          [![Models used](static/img/recap_scaling_laws.jpg)](static/img/recap_scaling_laws.jpg)

      - title: Seating category
        content: |
          The tool assumes economy seats in computing the travel footprint. 
          On average it can be considered that the 
          footprint can be multiplied by ∼ 1.5, ∼ 2.0 and ∼ 2.5 
          for flying in Premium Economy, Business and First class. 
          
      - title: Accounting for train emission
        content: |
          The minimum distance for flying (one leg of the round trip) 
          is an input to be selected by the user (it is set to 500 km by default). 
          Below the minimum distance for flying, it is assumed that train is used.
          Deviations from the shortest path is accounted by a 
          1.35 multiplication factor. The tool thus assumes the 
          mean of the emission factors of national and international rails, 
          as provided by DEFRA (i.e. 23 grams per passenger km). This value is consistent with the ADEME values, 
          if one considers trains powered by non-nuclear energy (it would be a factor of ~10 lower in that case).
          To relate the duration of a train journey to a travel distance, 
          an average speed of 100 km/h is assumed. 

    - blocks:
          
      - title: Input and output data
        content: |
          The inputs are provided in US English for the city and country 
          names, without diacritics. On each line, the city and country 
          names must be separated by a comma. Pasting a CSV file in the
          form is possible, provided that a comma separates
          the city and country names. 

          A round trip is defined by a city pair. If the user enters _cityA_ as
          the origin city, and twice _cityB_ as destinations, the tool returns
          the cumulative emission and distance from two round trips 
          involving _cityA_ and _cityB_, and indicates that 2 round trips were involved.
          The same happens if the user enters twice _cityA_ as the city of origin
          and _cityB_ as the sole destination.

          Three types of inputs can be considered 
          depending on whether the user wants an “individual” estimate 
          or an estimate for a conference, meeting and so on. In the 
          former case, the “origin” city is unique and the “destination” 
          cities may be multiple. The tool returns the carbon dioxide 
          equivalent emission for each city of destination. The tool can thus
          be run also for an organization interested to know about its travel 
          footprint, in which case the "origin" city is the city from which
          employees travel. In the later case, the “origin” cities are multiple 
          (i.e. the cities from which the participants to the conference 
          depart from), and the “destination” city may be a single host city 
          or multiple host cities if the user wants to compare their 
          associated footprint. If there is one destination, the tool returns 
          the carbon dioxide equivalent for each city of origin. If multiple 
          destinations are provided the tool returns the carbon dioxide 
          equivalent emission summed over all cities of 
          origin and for each city of destination. The cumulative round trip 
          distance to each city of destination is also provided. 

          The result page provides a summary plot which can be 
          downloaded, as well as a csv and raw yaml file, which can be used for
          further processing. The csv file  lists the name of the 
          city as in the form, the address to which it 
          was geolocated, the carbon dioxide emission (in kg), the 
          distance travelled, the number of trips possible by train (i.e. 
          when the distance is less than the minimum flying distance, 
          e.g. 500 km) and the number of trips by plane. The plot and the 
          csv file rank the cities against the carbon dioxide emissions. 

      - title: Trouble shooting
        content: |
          The estimation can go wrong if a city is not properly 
          geolocated. This may happen because the name of the city is 
          wrongly spelled or the geolocator (OpenStreetMap) is confused. An error
          should be listed at the end of the result page. Don’t be 
          surprised, if the name recovered by the geolocator is not 
          exactly the one you had expected (e.g. a city is located at the 
          address of an embassy). An error may also occur if the input file 
          submitted does not comply with the requested format, 
          including font encoding. If nothing happens during a simple request, it 
          is most likely caused by the geolocator being unavailable. In 
          this case, try again a few minutes later.
          In case of very large many-to-many origin-to-destination 
          combinations, the computing time may become very large. The advice is
          to split the inputs into parts. This may happen when comparing tens 
          of thousands origins with hundreds of destinations. 
          
          If the format of the input data is not respected, the calculator will
          crash, without being too informative. Please check your inputs first.
          
          If you experienced an error, it will always help to empty the Cache of 
          your navigator. Alternatively, you may want to try with a different 
          browser.

      - title: Caveats
        content: |
          The numbers provided by the tool do not come with 
          uncertainties, and shall only be considered indicative of the true emission. 
          However, the numbers can be 
          used for relative comparisons, e.g. when comparing two cities 
          for hosting a conference. 
          
      - title: Confidentiality
        content: |
          The data provided in the form will remain confidential, as will be the results.
          
      - title: Disclaimer
        content: |
          This tool is provided on a best effort basis as a service to 
          members of the science community. The numbers provided 
          are informative and have obviously no legal value. 

      - title: Reference
        content: |
          Results from the tool may reference to [Barret (2020),
          Estimating, monitoring and minimizing the travel footprint 
          associated with the development of the Athena X-ray Integral Field Unit,
          An on-line travel footprint calculator released to the science community, 
          Experimental Astronomy, 49, 183. doi:10.1007/s10686-020-09659-8](https://ui.adsabs.harvard.edu/abs/2020arXiv200405603B/abstract).
 
      - title: Original motivation
        content: |
          Global warming poses a threat for life on our planet. Emissions of 
          carbon dioxide by aircrafts keeps increasing, as the world 
          economy keeps growing (it is about 3% of the anthropogenic 
          emissions nowadays). Carrying scientific research is generally associated 
          with traveling across the world, and thus air travel is likely to 
          dominate the carbon footprint of most scientists and is 
          likely to be large for developing international projects. This tool was 
          first developed to compute the travel footprint 
          associated with the development of the X-ray Integral 
          Field Unit to fly on board the Athena space observatory 
          in the early 2030s. The rather large number derived, 
          typically one hundred ton of carbon dioxide per bi-annual consortium meeting,
          imposed concrete actions to reduce the footprint 
          of the project, by re-considering the number of 
          large meetings, implementing different ways of interacting and 
          working collectively in a world-wide consortium. The tool was 
          further improved to easily compute the travel footprint associated 
          with individual traveling or with the organization of events, involving
          a large number of travels.  Finally, by comparing different, 
          widely used methods, providing so different estimates, the tool is
          expected to raise awareness within the scientific community 
          (and hopefully the authorities and medias) 
          about the lack of regulations or framework on the critical 
          matter of estimating aircraft emissions.

      - title: Concluding note
        content: |
          As a personal note, I would like to stress that, as a scientist, I 
          find it very worrying that there are no standards 
          for computing the flight emissions. May this tool help to raise 
          awareness on this issue. 
          
      - title: Additional resources
        content: |
          - Labos1.5 organisation (https://labos1point5.org/ges-1point5)
          - Offset your flight with [atmosfair](https://www.atmosfair.de/en/offset/flight)
          - [ADEME](https://www.ademe.fr/en/frontpage/)
            (French Environment & Energy Management Agency)
          - [DEFRA](https://www.gov.uk/government/publications/greenhouse-gas-reporting-conversion-factors-2023)
            emission conversion factors 2023
          - [ICAO](https://www.icao.int/environmental-protection/carbonoffset/pages/default.aspx)
            Carbon Emissions Calculator
          - [KLM data](https://www.klm.com/travel/nl_en/prepare_for_travel/fly_co2_neutral/all_about_sustainable_travel/index.htm)
            KLM data
          - [GHG information for transport services, June 2019](https://www.ecologique-solidaire.gouv.fr/sites/default/files/Information_GES%20-%202019.pdf)
            from the French Ministry for the Ecological and Inclusive Transition 
          - [MyClimate](https://www.myclimate.org) 
            MyClimate
          - L. Hackel [travel footprint calculator](https://lhackel.shinyapps.io/travel_footprint/)
            based on DEFRA emission factors
          - [Wikipedia article on the environmental impact of aviation](https://en.wikipedia.org/wiki/Environmental_impact_of_aviation)
            Wikipedia article on the environmental impact of aviation



estimate:
  hero:
    title: Request an estimation
    description: |
      The results will be available <small>(almost)</small> immediately.
      <br>
      It may take from a few seconds up to a few minutes,
      depending on the amount of locations you provided.

  help:
    first_name: Fill these to say hello.
    last_name: We will never share your data with anyone.
    origin_addresses: |
      Use <code>en_US</code> city and country names, without diacritics.
      <br>
      The comma matters.
      <br>
      This is either a home city and a country
      or the cities and countries of the participants to the conference, meeting…
    origin_addresses_file: |
      If you provide a file, we'll use it instead of the list on the left.
      <br>
      The spreadsheet's first sheet must have an <code>Address</code> column,
      or a <code>City</code> and <code>Country</code> columns.
      <br>
      <a href="static/public/sample/sample_addresses.csv" target="_blank">Example CSV</a>
      ⋅
      <a href="static/public/sample/sample_addresses.xlsx" target="_blank">Example XLS</a>
    destination_addresses: |
      This is either the cities and countries to travel to
      or the host city and country of the conference, meeting…
      <br>
      Please provide multiple cities and countries to compute the location
      of the minimum emission.
    destination_addresses_file: |
      Need inspiration?
      Look at the airports in
      [Africa](/static/public/sample/Large_airports_in_Africa.csv),
      [Asia](/static/public/sample/Large_airports_in_Asia.csv),
      [Europe](/static/public/sample/Large_airports_in_Europe.csv),
      [North America](/static/public/sample/Large_airports_in_NorthAmerica.csv),
      [Oceania](/static/public/sample/Large_airports_in_Oceania.csv),
      [South America](/static/public/sample/Large_airports_in_SouthAmerica.csv),
      or [all of them](/static/public/sample/Large_airports_in_all_continents.csv).
    use_train_below_km: |
      For <small>(single)</small> trips below this distance,
      we'll ignore the plane models and use <code>23 g.km<sup>-1</sup></code>.

  # Labels accept HTML, but not markdown
  # Descriptions accept neither, since we use the HTML title attribute
  form:
    email:
      label: Email Address
      description: Make sure you provide a valid address or you won't receive the results!
    run_name:
      label: Run Name
      description: Usually the name of the event.  Results will look better if you fill this.
      placeholder: "Global Peace Summit 2020 – Estimation N°07"
    first_name:
      label: First Name
      description: Also known as given name, eg. `Didier`.
      placeholder: Adèle
    last_name:
      label: Last Name
      description: Also known as family name, eg. `Barret`.
      placeholder: Bellego
    institution:
      label: Institution / Enterprise
      description: If any?
    comment:
      label: Leave a comment
      description: Any input is appreciated.  Everyone's a critic.
    use_train_below_km:
      label: Use train below
      description: We will use the train carbon dioxide equivalent emission factor below this great circle distance (one leg of the round trip).
      values:
        - label: Do not consider train
          value: 0
        - label: 100 km (~ 1h by train)
          value: 100
        - label: 300 km (~ 5h by train)
          value: 300
        - label: 500 km (~ 8h by train)
          value: 500
        - label: 700 km (~ 10h by train)
          value: 700
        - label: 1000 km (~ 13h by train)
          value: 1000

    origin_addresses:
      label: Origin Cities
      description: |
        One address per line, in the form `City, Country`.
        Make sure your addresses are correctly spelled.
      # We MUST use the dumb CRLF pair for dumb windows users
      placeholder: "Paris, France\r\nBerlin, Germany"
#      placeholder: |
#        Paris, France
#        Berlin, Germany
    destination_addresses:
      label: Destination Cities
      description: |
        One address per line, in the form `City, Country`.
        Make sure your addresses are correctly spelled.
      placeholder: |
        Washington, United States of America
    origin_addresses_file:
      label: Origin Cities
      description: |
        Accepted files: CSV, XLS, XLSX.
        We will use the Address column, or the City and Country columns.
      error: Please only use spreadsheet files. (CSV, XLS, XLSX)
    destination_addresses_file:
      label: Destination Cities
      description: |
        Accepted files: CSV, XLS, XLSX.
        We will use the Address column, or the City and Country columns.
      error: Please only use spreadsheet files. (CSV, XLS, XLSX)
#    compute_optimal_destination:
#      label: |
#        Compute the destination city that will minimize emissions <br>
#        (useful when setting up a meeting/conference)
#      description: |
#        We will only look through Cities specified in the Destination Cities.
    captcha:
      label: Prove you are not a bot
      description: |
        We have to protact against malicious spammers.
    use_atmosfair_rfi:
      label: |
        Use the <acronym title="Radiative Forcing Index">RFI</acronym>
        multiplier recommended by <a href="https://www.atmosfair.de">atmosfair</a>
        (i.e. <code>3</code> for all emissions above <code>9km</code>)
        <br>
        For long flights, the multiplier may reach <code>2.8</code> or so.
        Otherwise, by default, <code>1.9</code> will be used.
      description: |
        We will only look through Cities specified in the Destination Cities.

estimate_queue:
  hero:
    title: Please wait…
    description: |
      Your estimation is being computed.
      This may take several minutes.
      <br>
      This webpage will automatically update when it is done.

estimation:
  hero:
    title: Your estimation is now available!
    description: |
      Thank you for using our service.
      <br>
      <strong>
      Bookmark this webpage, it is private and unlisted.
      </strong>
  failure:
    hero:
      title: Your estimation has failed!
      description: |
        Sorry about that.  Please find the error message below.
        <br>
        Thank you for using our service.
  lolliplot:
    one_to_one: |
      The carbon dioxide equivalent emission is provided for each city of destination.
      Identical trips (i.e. identical destinations) are summed
      and the cumulative distance is provided.
    one_to_many: |
      The carbon dioxide equivalent emission is provided for each city of destination.
      Identical trips (i.e. identical destinations) are summed
      and the cumulative distance is provided.
    many_to_one: |
      The carbon dioxide equivalent emission is provided for each city of origin.
      Identical trips (i.e. identical origins) are summed and the cumulative distance is provided.
    many_to_many: |
      The carbon dioxide equivalent emission is summed
      over all cities of origin and provided for each city of destination.
      The cumulative distance to each city of destination is provided.
      Duplicates in the destinations are removed.
  footer: |
    ### See also
    - [EPA's Equivalencies Calculator](https://www.epa.gov/sites/production/files/widgets/ghg-calc/calculator.html#emissions)

    ### Contact Us
    - <icon envelope> [didier.barret@irap.omp.eu](mailto:didier.barret@irap.omp.eu)
    - <icon bug> [Report](https://gitlab.irap.omp.eu/carbon/travel-carbon-footprint.irap.omp.eu/issues) an issue
    - <icon puzzle> [Hire](mailto:antoine@goutenoir.com) a nerd

footer:
  credits: |
    Didier Barret (IRAP) © 2019
